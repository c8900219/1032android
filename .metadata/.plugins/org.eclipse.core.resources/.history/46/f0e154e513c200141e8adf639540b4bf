package com.wiwi.android0303;
import java.util.Random;
import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Align;
import android.os.Bundle;
import android.text.Layout.Alignment;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.LinearLayout;

public class PuzzleGame extends Activity {
	private MazeView myview;

    @Override
    
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        myview=new MazeView(this);
        setContentView(R.layout.main);
        LinearLayout ll=(LinearLayout)findViewByld(R.id.mylinear);
	ll.addView(myview);
}
private class MazeView extends View{
  private final int N=5;
  private int maze[];
  private Random rnd;
  private int width,height;
  private int row,col;
  private Bitmap mBitmap,tBitmap;
  private boolean first=true;
  public MazeView(Context context){
	  super(context);
	  setFocusable(true);
	  setFocusablelnTouchMode(true);
	    }
	  
  @Override
  
	  
  }
public void onSizeChanged(int w,int h,int oldw,int oldh){
	super.onSizeChanged(w,h,oldw,oldh);
	width=w;
	height=h;
	initalMazeView();
}	

private void initalMazeView(){
	mBitmap=BitmapFactory.decodeResource(getRescources(),Rdrawable.penguin);
	if(width>mBitmap.getWidth());
	width=mBitmap.getWidth();
	if(height>mBitmap.getHeight());
	height=mBitmap.getHeight();
	initMaze();
}
private void initMaze(){
	rmd=new Random();
	maze=new int[M*N];
	row=col=N-1;
	for(int i=0;i<N*N;i++)
		maze[i]=i;
	
}	
private void swap(int m,int n){
	int temp=maze[m];
	maze[m]=maze[n];
	maze[n]=temp;
	
	
}




}
